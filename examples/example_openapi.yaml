openapi: 3.0.0
info:
  title: Example Pet Store API
  version: 1.0.1
paths:
  /pets:
    get:
      summary: List all pets
      description: Returns a list of all pets in the store. Supports pagination using the 'limit' parameter.
      operationId: list_pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a pet
      description: Creates a new pet in the store.
      operationId: create_pet
      requestBody:
        description: Pet object to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '201':
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pets/{petId}:
    get:
      summary: Info for a specific pet
      description: Retrieves the details of a specific pet by its ID.
      operationId: show_pet_by_id
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
        - name: version
          in: query
          required: false
          description: API version
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update an existing pet
      description: Updates an existing pet by ID.
      operationId: update_pet
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to update
          schema:
            type: string
      requestBody:
        description: Pet object to update in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '200':
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a pet
      description: Deletes a specific pet by its ID.
      operationId: delete_pet
      parameters:
        - name: petId
          in: path
          required: true
          description: Pet id to delete
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted (No Content)
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
